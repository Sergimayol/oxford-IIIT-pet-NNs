RaceClassifier(
  (backbone): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=37, bias=True)
  )
)
==========================================================================================
Layer (type:depth-idx)                   Output Shape              Param #
==========================================================================================
RaceClassifier                           [1, 37]                   --
├─Sequential: 1-1                        [1, 256, 7, 7]            --
│    └─Conv2d: 2-1                       [1, 64, 63, 63]           (23,296)
│    └─ReLU: 2-2                         [1, 64, 63, 63]           --
│    └─MaxPool2d: 2-3                    [1, 64, 31, 31]           --
│    └─Conv2d: 2-4                       [1, 192, 31, 31]          (307,392)
│    └─ReLU: 2-5                         [1, 192, 31, 31]          --
│    └─MaxPool2d: 2-6                    [1, 192, 15, 15]          --
│    └─Conv2d: 2-7                       [1, 384, 15, 15]          (663,936)
│    └─ReLU: 2-8                         [1, 384, 15, 15]          --
│    └─Conv2d: 2-9                       [1, 256, 15, 15]          (884,992)
│    └─ReLU: 2-10                        [1, 256, 15, 15]          --
│    └─Conv2d: 2-11                      [1, 256, 15, 15]          (590,080)
│    └─ReLU: 2-12                        [1, 256, 15, 15]          --
│    └─MaxPool2d: 2-13                   [1, 256, 7, 7]            --
├─AdaptiveAvgPool2d: 1-2                 [1, 256, 6, 6]            --
├─Sequential: 1-3                        [1, 37]                   --
│    └─Dropout: 2-14                     [1, 9216]                 --
│    └─Linear: 2-15                      [1, 4096]                 37,752,832
│    └─ReLU: 2-16                        [1, 4096]                 --
│    └─Dropout: 2-17                     [1, 4096]                 --
│    └─Linear: 2-18                      [1, 4096]                 16,781,312
│    └─ReLU: 2-19                        [1, 4096]                 --
│    └─Linear: 2-20                      [1, 37]                   151,589
==========================================================================================
Total params: 57,155,429
Trainable params: 54,685,733
Non-trainable params: 2,469,696
Total mult-adds (Units.MEGABYTES): 923.83
==========================================================================================
Input size (MB): 0.79
Forward/backward pass size (MB): 5.19
Params size (MB): 228.62
Estimated Total Size (MB): 234.60
==========================================================================================

